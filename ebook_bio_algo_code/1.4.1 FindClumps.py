def MaxMap(dict):
    """接受频率表(哈希表/字典)，给出最高频率(value)的k-mer（key）"""
    max_freq = max(dict.values())
    return max_freq


def FrequencyTable(t, k):
    """接受text和k-mer的k值，给出频率表的字典(哈希表)"""
    freqMap = {}
    n = len(t)
    for i in range(0, n-k):
        pattern = t[i : i + k]
        if not pattern in freqMap.keys():
            freqMap[pattern] = 1
        else:
            freqMap[pattern] = freqMap[pattern] + 1
    return freqMap

def BetterFrequentWords(t, k):
    freqPatterns = []
    freqMap = FrequencyTable(t, k)
    print(freqMap)
    max_count = MaxMap(freqMap)
    print(max_count)
    for pattern, count in freqMap.items():
        if count == max_count:
            freqPatterns.append(pattern)
    return freqPatterns

def FindClumps(Text, k, L, t):
    """ Text: Genome interval
        k: k-mer's length
        L: the string that k-mers show up repetitively
        t: the times that k-mer shows up """
    Patterns = []
    n = len(Text)
    for i in range(0, n - L + 1):
        window = Text[i:i+L]
        freqMap = FrequencyTable(window, k)
        for s in freqMap.keys():
            if freqMap[s] >= t:
                Patterns.append(s)
    print(Patterns)
    Patterns = set(Patterns)
    Patterns = ' '.join(Patterns)
    return Patterns
Text = 'ATACCAGCAGATGACGATGCAGATGACACCCTCTTTTTAGCTGCATATTGGTCGTACGGACAGTCCCTTACACTGGTGAGATCTATGCAGTCATGAATAGTGCGCGGATATCATTCCGGTGGGATGATCATTACTTTTTCTCCTCTCTTTTTCCTTTTTCTAGGCAAACTGTGTACTTATACCTACGCCTTTACTGGGCTCTAAAACGACGAAATGTCTTGTTCCGCTTGCTGAGGACTTAACCCATCCAGAGAAGGAAACCGTCAAAGACATGCATACCCGGTAATATCCTAATTTTTAGTGTCGTTCGCGAAAAATACCCGGGCTGCAGAATATGTCGATCCAAGATGTATATTACCCCCGGGGTAATAACGCTATATATAACGCTACGCTAGGCCCCGAATTCGTCCCTGCATGTACATCCAAGAATCGCCGAAAGGAAGTGTCTGTTAATGAATGGACTTGTACCTATTTTCCGGAGGGGCTTCGGACGCACAACTTACTGTGATCCGAATAATAAGGGCGATAATTAGGTCTTATGACACAGGCATCACTGCCGTCGCGAGTAGAGATGCATCAGTATTCCAGAGAAGCTCGATTACCGGGGACGCCGCAAAATTTCTATGGACAGGCATATTAGACAGTTGCAGTGCGTCTGGAGCCTAGAGATGTCATCGGCCTACTTACGTAAGGCGACTAAGAATCCTCACTGAACTCTGTTACTTTCACCGCGGCTTGCTGGACACACCCTAGGAATAGCAGCGATCGGACTTCGTCTGTGTGGTCTGTGTGTCTGTGTATTACATGCTGTTTACATGCTGCTACATGCGAATTTGCGTTTTCGTGGCTTCCATATCATCGCAGCGCTCGCCTAACTCTACTCTGCCTGCCTAACTCTCTTTGGTACTATTGTCCGTCTTCCCCTCGTGTCTTTGCCATTGGCCGCCTTCAGTTTGTCCATCACTAAGCGCCAGCTCCTTACTATTCGGCGTTGCCGGGCTCTTTGTTGGAATATAGGGACGCCAGAGACTCGTACGCCAAACGGTAATGTACCACAAGGATTGACGAGGACGACTCGGGGGCGTGACGACTCGGGGCCCACCCCTTGGTACTAATAGTGCACAGAACATCGTTGCGACCCACGATTGAGCATGGGTACACAACGGGTTATACACAACACACGACAGGTTGTTTTCCAATGATAGCTAGAGCGCCCCTACAAACGGCCGAGCACAACAGTTTGTGCTCAATTCTAAGTATCCTTATTGTATGAGGAAGTTGCATGGTTAATCAACGTCCCCAAGAACGTGTCGAACGTTCAGGAACTTTTGGTCCTACCATTGGTCACGACGTAGAAATACGGGGCGTTGATTCGTCCAAGCATGGAGATCGCGTCTCAGAATGAGGCCGGCTCAGGTTAAGTGGCGCGTATTTTCTACTTTGCACGGAGTCCTGAATATGTAGTTAGGAAACGCACGAATCAATCGTTTGCCGGGATATTGACGCAATACGCCTTCTCTTGTTCCAAGCGGGCCGAAATTTTACATCGATCGGTCCCCATCTGACTAAGCCCTGGACACCTGGACATGTCGATCCTTCGATCGATCCTTTATCCTTCACCGTCAAAGTGCCTCGATATCTAGGCTTTTTCCGATTTCCGATCCGAACGAATTTGCAGGCACTCGTGACATCCGTAGGTGACCATCCTTAGGTACATGCTTTCGCGCGTACCGCGAGGAGATACGGCAAACCGTCTTTAGGGCTCCGAGCTGCGTGATAACCAATAGAACAACACGGCAGGAAAAGGCTGGCTTATAGCAAGCATCGTACAGTCGCGATACGGTACAAAGCTAGTCGCCCATGCAGGGTAGCTCGTAACACCCTGAATCTGATCCTCAATGACCCCACGTATTCACGGTCATGAGTTGTGAGTTGAGTTGTCGTTGTCTCCAACATTTC'
k = 8
L = 29
t = 4
print(FindClumps(Text,k,L,t))